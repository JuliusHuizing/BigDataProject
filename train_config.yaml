collect: 
  module: "DataLoader"
  config: 
    data_dir: "data/train/"
    merge: True
    # n: 100 # you can take subset of the data to debug more quickly.

raw_data_quality_check:
  module: "GXDataQualityCheckModule"
  config:
    expectation_suite_name: "raw_data_expectation_suite"
    continue_after_failure: True

preprocess:
  # show we can integrate; but we don't really need it bc we actually can just use the market numbers as features.
  integrate: 
      collect:
        module: "JSONDataLoader"
        config: 
          data_dir: "data/integrate/product_categories/"
          merge: True
      preprocess:
        - module: "RenameColumns"
          config:
            mapping: {"name": "product_category_name"} 
      join: 
        column_primary_source: "product_category_id"
        column_secondary_source: "id"
        join_type: "inner"  # Can be "inner", "left", "right", "outer" depending on your requirements.


  impute_missing_values:
    - module: RandomNullInjector
      config:
        input_column_name: "marketplace_id"
        output_column_name: marketplace_id"
        null_percentage: 0.1
    - module: RandomNullInjector
      config:
        input_column_name: "product_category_id"
        output_column_name: product_category_id"
        null_percentage: 0.1

    - module: ImputationModule
      config:
        column_name: "product_category_id"
        imputation_method: "random"

    - module: ImputationModule
      config:
        column_name: "marketplace_id"
        imputation_method: "random"

  clean:
    - module: "DropNull"
      config:
        columns: ["label"]

    - module: DropNotIn
      config:
        input_column_name: "label"
        output_column_name: "label"
        targets: ["True", "False"]

    - module: ConvertToBoolean
      config:
        input_column_name: "verified_purchase"
        output_column_name: "verified_purchase"
        mapping: {"Y": True, "N": False}

    - module: ConvertToBoolean
      config:
        input_column_name: "vine"
        output_column_name: "vine"
        mapping: {"Y": True, "N": False}

  tansform:
    - module: "OneHotEncodingModule"
      config:
        input_column_name: "marketplace_id"
        output_column_name: "marketplace_id_encoded"
    - module: "OneHotEncodingModule"
      config:
        input_column_name: "product_category_id"
        output_column_name: "product_category_id_encoded"

  add_features:
    - module: "CharacterCountModule"
      config:
        input_column_name: "review_body"
        output_column_name: "num_exlamation_marks"
        characters_to_count: ["!"]

    - module: "CharacterCountModule"
      config:
        input_column_name: "review_body"
        output_column_name: "num_question_marks"
        characters_to_count: ["?"]

    - module: "CharacterCountModule"
      config:
        input_column_name: "review_body"
        output_column_name: "num_periods"
        characters_to_count: ["."]
    
    - module: TextLengthFeature
      config:
        input_column_name: "review_body"
        output_column_name: "review_body_length"
    - module: TextLengthFeature
      config:
        input_column_name: "review_headline"
        output_column_name: "review_headline_length"

  # since inference data may contain missing values, it's best to also let the trainig pipeline get familiar with this.


    
    # - module: TextSentimentFeature #FIXME: this crashes my laptop atm..
    #   config:
    #     input_column_name: "review_body"
    #     output_column_name: "review_body_sentiment"

  # check:
  #   module: "GreatExpectations"
  #   expectation_suite_path: "preprocessed_data_expectation_suite"


pre_training_data_quality_check:
  module: "GXDataQualityCheckModule"
  config:
    expectation_suite_name: "preprocessed_data_expectation_suite"
    continue_after_failure: False

train:
  module: "TrainPipeline"
  config:
    # the portion to be used for trainining (and validation). The rest for testing
    train_split: 0.9
    features:
      - "num_exlamation_marks"
      - "num_question_marks"
      - "num_periods"
      - "marketplace_id_encoded" 
      - "product_category_id_encoded"
      - "review_body_length"
      - "review_headline_length"
      - "verified_purchase"
      - "vine"
      # - "review_body_sentiment"
    target: "label"
    grid_search:
      params:
        numTrees: [200]
        maxDepth: [1, 5, 10]
      k: 5
    save_dir: "model"
    overwrite: True




